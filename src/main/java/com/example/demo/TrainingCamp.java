package com.example.demo;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

//main entity class to store data in database with constraints
@Entity
public class TrainingCamp {

	//centerCode can not be null, must be unique, and should be of length 12
	@Column(unique=true)
	@NotNull
	@Size(min=12, max=12, message="Center Code needs to be of length 12 only.")
	@Id	
	private String centerCode;
	
	//centerName can not be null and must be of length 40
	@NotNull
	@Size(min=1, max=40)
	private String centerName;
	
	//address should not be null
	@NotNull
	@OneToOne(cascade = CascadeType.ALL)
	private Address address;
	
	private int studentCapacity;
	
	@ElementCollection
	private List<String> coursesOffered;
	
	//createdOn takes Epoch time generated by system
	private long createdOn = System.currentTimeMillis();
	
	//email validation by annotation
	@Email
	private String contactEmail;
	
	//contact number should be not null and of length 10 
	@NotNull
	@Size(min=10, max=10)
	private String contactPhone;

	public String getCenterCode() {
		return centerCode;
	}
	public void setCenterCode(String centerCode) {
		this.centerCode = centerCode;
	}
	public String getCenterName() {
		return centerName;
	}
	public void setCenterName(String centerName) {
		this.centerName = centerName;
	}
	public Address getAddress() {
		return address;
	}
	public void setAddress(Address address) {
		this.address = address;
	}
	public int getStudentCapacity() {
		return studentCapacity;
	}
	public void setStudentCapacity(int studentCapacity) {
		this.studentCapacity = studentCapacity;
	}
	public List<String> getCoursesOffered() {
		return coursesOffered;
	}
	public void setCoursesOffered(List<String> coursesOffered) {
		this.coursesOffered = coursesOffered;
	}
	public long getCreatedOn() {
		return createdOn;
	}
	public void setCreatedOn(long createdOn) {
		this.createdOn = createdOn;
	}
	public String getContactEmail() {
		return contactEmail;
	}
	public void setContactEmail(String contactEmail) {
		this.contactEmail = contactEmail;
	}
	public String getContactPhone() {
		return contactPhone;
	}
	public void setContactPhone(String contactPhone) {
		this.contactPhone = contactPhone;
	}

	@Override
	public String toString() {
		return "TrainingCamp [centerCode=" + centerCode + ", centerName=" + centerName + ", address=" + address
				+ ", studentCapacity=" + studentCapacity + ", coursesOffered=" + coursesOffered + ", createdOn="
				+ createdOn + ", contactEmail=" + contactEmail + ", contactPhone=" + contactPhone + "]";
	}
}